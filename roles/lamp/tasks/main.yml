---
# LAMP stack setup and configuration tasks.

- name: diable SELinux
  selinux:
    policy: targeted
    state: disabled
  register: st

- name: restart machine
  shell: sleep 2 && reboot
  async: 1
  ignore_errors: true
  when: st.changed

- name: waiting for server to come back
  local_action: wait_for host="{{ inventory_hostname }}" port=22 search_regex=OpenSSH delay=5 timeout=300
  connection: local
  become: false
  when: st.changed

- name: Install EPEL and REMI repository
  yum:
    state: present
    name: "{{ item }}"
  with_items:
    - yum-utils
    - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    - http://rpms.remirepo.net/enterprise/remi-release-7.rpm

- name: Enable Optional RPMs repository
  shell: subscription-manager repos --enable=rhel-7-server-optional-rpms

- name: Enable Remi PHP 5.6 repository
  shell: yum-config-manager --enable remi-php56

- name: Yum update
  yum:
    name: '*'
    state: latest

- name: Install PHP56 and Apache
  yum:
    state: present
    name: "{{ item }}"
  with_items:
    - php.x86_64
    - php-bcmath.x86_64
    - php-dba.x86_64
    - php-gd.x86_64
    - php-gmp.x86_64
    - php-imap.x86_64
    - php-ldap.x86_64
    - php-mbstring.x86_64
    - php-mcrypt.x86_64
    - php-mssql.x86_64
    - php-mysqlnd.x86_64
    - php-mysql.x86_64
    - php-pdo.x86_64
    - php-pecl-gnupg.x86_64
    - php-pecl-http.x86_64
    - php-pecl-igbinary.x86_64
    - php-pecl-imagick.x86_64
    - php-pecl-memcache.x86_64
    - php-pecl-mongo.x86_64
    - php-pecl-oauth.x86_64
    - php-pecl-propro.x86_64
    - php-pecl-raphf.x86_64
    - php-pecl-ssh2.x86_64
    - php-pecl-uploadprogress.x86_64
    - php-pecl-xhprof.x86_64
    - php-pgsql.x86_64
    - php-pspell.x86_64
    - php-soap.x86_64
    - php-tidy.x86_64
    - php-xmlrpc.x86_64
    - mod_ssl.x86_64

- name: Configure PHP memory limit
  template:
    src: php.ini.j2
    dest: /etc/php.ini

- name: Enable the Apache service
  service:
    name: httpd
    enabled: yes
    state: started

- name: Apache umask configuration
  template:
    src: httpd.j2
    dest: /etc/sysconfig/httpd

- name: Configure default vhost
  template:
    src: default.conf.j2
    dest: /etc/httpd/conf.d/default.conf

- name: Initialize the default index.html
  file:
    path: "{{ www_path }}/html/index.html"
    state: touch

- name: Reload the Apache service
  service:
    name: httpd
    state: reloaded

- name: Open HTTP and HTTPS ports
  firewalld:
    service: "{{ item }}"
    zone: public
    immediate: yes
    permanent: true
    state: enabled
  with_items:
    - http
    - https

- name: Install MariaDB
  yum:
    state: present
    name: mariadb-server
  register: rh_mysql_install_packages

- name: Check if MySQL packages were installed.
  set_fact:
    mysql_install_packages: "{{ (rh_mysql_install_packages is defined and rh_mysql_install_packages.changed) or (deb_mysql_install_packages is defined and deb_mysql_install_packages.changed) }}"

- name: Install MySQL-python module
  yum:
    state: present
    name: MySQL-python
  when: mysql_install_packages | bool

- name: Enable the MariaDB service
  service:
    name: mariadb
    enabled: yes
    state: started
  when: mysql_install_packages | bool

- name: Configure MariaDB max_allowed_packet
  template:
    src: my.cnf.j2
    dest: /etc/my.cnd
  when: mysql_install_packages | bool

- name: Restart the MariaDB service
  service:
    name: mariadb
    state: restarted
  when: mysql_install_packages | bool

# mysql_secure_installation
- name: Get MySQL version.
  command: 'mysql --version'
  register: mysql_cli_version
  changed_when: false
  when: mysql_install_packages | bool

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false
  when: mysql_install_packages | bool

- name: Get list of hosts for the root user.
  command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = 'root' ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts
  changed_when: false
  always_run: true
  when: mysql_install_packages | bool

# Note: We do not use mysql_user for this operation, as it doesn't always update
# the root password correctly. See: https://goo.gl/MSOejW
# Set root password for MySQL >= 5.7.x.
- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -u root -NBe
    'ALTER USER "root"@"{{ item }}" IDENTIFIED WITH mysql_native_password BY "root";'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: ((mysql_install_packages | bool) and ('5.7.' in mysql_cli_version.stdout))

# Set root password for MySQL < 5.7.x.
- name: Update MySQL root password for localhost root account (< 5.7.x).
  shell: >
    mysql -NBe
    'SET PASSWORD FOR "root"@"{{ item }}" = PASSWORD("root");'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: ((mysql_install_packages | bool) and ('5.7.' not in mysql_cli_version.stdout))

# Has to be after the root password assignment, for idempotency.
- name: Copy .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: mysql_install_packages | bool

- name: Get list of hosts for the anonymous user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  always_run: true
  when: mysql_install_packages | bool

- name: Remove anonymous MySQL users.
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"
  when: mysql_install_packages | bool

- name: Restart the MariaDB service
  service:
    name: mariadb
    state: restarted
  when: mysql_install_packages | bool

- name: Install Git
  yum:
    state: present
    name: git

- name: Install latest Drush.phar
  shell: |
    drush_latest="$(curl -s https://github.com/drush-ops/drush/releases/latest| grep -c "$(drush --version|grep -i version|cut -f2 -d':'|tr -d ' ')")"
    if [ ! -e /usr/local/bin/drush ] || [ $drush_latest -ne 1 ]; then
      php -r "readfile('https://s3.amazonaws.com/files.drush.org/drush.phar');" > /usr/local/bin/drush
      chmod +x /usr/local/bin/drush
    fi

